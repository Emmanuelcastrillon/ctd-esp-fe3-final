{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMMANUEL\\\\Documents\\\\React-Frontend3\\\\Ejercicios\\\\FinalProject\\\\fe3-final\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useContextGlobal } from \"./utils/global.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  //Aqui deberan implementar el form completo con sus validaciones\n  const {\n    state,\n    dispatch\n  } = useContextGlobal();\n  const [fail, setFail] = useState(\"\"); // const handleSubmit=(e)=>{\n  //   e.preventDefault()\n  //   const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n  //   if(state.userName.length>5  && expresionRegular.test(state.userEmail) && isNaN(state.userName) && state.userName !==\"\" && state.userEmail!==\"\"){\n  //      dispatch({type:'validacion', payload:true})\n  //   }\n  //   else{\n  //     dispatch({type:'validacion', payload:false})\n  //     dispatch({type:'error', payload:true})\n  //   }\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const expresionRegular = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    if (state.userName === \"\" && state.userEmail === \"\") {\n      dispatch({\n        type: 'validacion',\n        payload: false\n      });\n      dispatch({\n        type: 'error',\n        payload: true\n      });\n      setFail(\"Los campos no pueden estar vacios\");\n    } else if (state.userName.length <= 5 || !isNaN(state.userName) || state.userName === \"\") {\n      dispatch({\n        type: 'validacion',\n        payload: false\n      });\n      dispatch({\n        type: 'error',\n        payload: true\n      });\n      setFail(\"Por favor verifique el nombre\");\n    } else if (!expresionRegular.test(state.userEmail) || state.userEmail === \"\") {\n      dispatch({\n        type: 'validacion',\n        payload: false\n      });\n      dispatch({\n        type: 'error',\n        payload: true\n      });\n      setFail(\"Por favor verifique la direccion de correo electronico\");\n    } else {\n      dispatch({\n        type: 'validacion',\n        payload: true\n      });\n      dispatch({\n        type: 'error',\n        payload: false\n      });\n    }\n  };\n\n  const handleOnchangeName = e => dispatch({\n    type: 'change_inputName',\n    payload: e.target.value.trimStart()\n  });\n\n  const handleOnchangeEmail = e => dispatch({\n    type: 'change_inputEmail',\n    payload: e.target.value.trimStart()\n  });\n\n  console.log(state.userName);\n  console.log(state.userEmail);\n  console.log(state.validacion);\n  console.log(state.error);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Nombre completo\",\n        value: state.userName,\n        onChange: handleOnchangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        value: state.userEmail,\n        onChange: handleOnchangeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), state.validacion && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Gracias \", state.userName, \" te contactaremos cuanto antes via email a la direccion electronica \", state.userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 28\n    }, this), state.error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: fail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"T15puPAqCLgh3KAd80BKOFiouRo=\", false, function () {\n  return [useContextGlobal];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useContextGlobal","Form","state","dispatch","fail","setFail","handleSubmit","e","preventDefault","expresionRegular","userName","userEmail","type","payload","length","isNaN","test","handleOnchangeName","target","value","trimStart","handleOnchangeEmail","console","log","validacion","error"],"sources":["C:/Users/EMMANUEL/Documents/React-Frontend3/Ejercicios/FinalProject/fe3-final/src/Components/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useContextGlobal } from \"./utils/global.context\";\r\n\r\n\r\nconst Form = () => {\r\n  //Aqui deberan implementar el form completo con sus validaciones\r\n  \r\n  const{state,dispatch}=useContextGlobal()\r\n  const [fail, setFail]=useState(\"\")\r\n \r\n  // const handleSubmit=(e)=>{\r\n  //   e.preventDefault()\r\n  //   const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n  //   if(state.userName.length>5  && expresionRegular.test(state.userEmail) && isNaN(state.userName) && state.userName !==\"\" && state.userEmail!==\"\"){\r\n  //      dispatch({type:'validacion', payload:true})\r\n  //   }\r\n  //   else{\r\n  //     dispatch({type:'validacion', payload:false})\r\n  //     dispatch({type:'error', payload:true})\r\n  //   }\r\n  // }\r\n\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault()\r\n    const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n    if( state.userName ===\"\" && state.userEmail===\"\"){\r\n      dispatch({type:'validacion', payload:false})\r\n      dispatch({type:'error', payload:true})\r\n      setFail(\"Los campos no pueden estar vacios\")\r\n   }\r\n    else if(state.userName.length<=5  || !isNaN(state.userName) || state.userName ===\"\"){\r\n       dispatch({type:'validacion', payload:false})\r\n       dispatch({type:'error', payload:true})\r\n       setFail(\"Por favor verifique el nombre\")\r\n    }\r\n    else if( !expresionRegular.test(state.userEmail) ||  state.userEmail===\"\"){\r\n      dispatch({type:'validacion', payload:false})\r\n      dispatch({type:'error', payload:true})\r\n      setFail(\"Por favor verifique la direccion de correo electronico\")\r\n   }\r\n\r\n    else{\r\n      dispatch({type:'validacion', payload:true})\r\n      dispatch({type:'error', payload:false})\r\n    }\r\n  }\r\n  \r\n  const handleOnchangeName=(e)=> dispatch({type:'change_inputName',payload:e.target.value.trimStart()})\r\n     \r\n     \r\n  const handleOnchangeEmail=(e)=>  dispatch({type:'change_inputEmail',payload:e.target.value.trimStart()})\r\n\r\n  console.log(state.userName)\r\n  console.log(state.userEmail)\r\n  console.log(state.validacion)\r\n  console.log(state.error)\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input placeholder=\"Nombre completo\" value={state.userName} onChange={handleOnchangeName}  />\r\n        <input  placeholder=\"Email\" value={state.userEmail} onChange={handleOnchangeEmail}  />\r\n        <button>Send</button>\r\n      </form>\r\n\r\n      {state.validacion && <h2>Gracias {state.userName} te contactaremos cuanto antes via email a la direccion electronica {state.userEmail}</h2>}\r\n      \r\n      {state.error && <h3>{fail}</h3>}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}