{"ast":null,"code":"// import { useState } from \"react\";\n// import { useContextGlobal } from \"./utils/global.context\";\n// const Form = () => {\n//   //Aqui deberan implementar el form completo con sus validaciones\n//   const{state,dispatch}=useContextGlobal()\n//   const [fail, setFail]=useState(\"\")\n//   // const handleSubmit=(e)=>{\n//   //   e.preventDefault()\n//   //   const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n//   //   if(state.userName.length>5  && expresionRegular.test(state.userEmail) && isNaN(state.userName) && state.userName !==\"\" && state.userEmail!==\"\"){\n//   //      dispatch({type:'validacion', payload:true})\n//   //   }\n//   //   else{\n//   //     dispatch({type:'validacion', payload:false})\n//   //     dispatch({type:'error', payload:true})\n//   //   }\n//   // }\n//   const handleSubmit=(e)=>{\n//     e.preventDefault()\n//     const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n//     if( state.userName ===\"\" && state.userEmail===\"\"){\n//       dispatch({type:'validacion', payload:false})\n//       dispatch({type:'error', payload:true})\n//       setFail(\"Los campos no pueden estar vacios\")\n//    }\n//     else if(state.userName.length<=5  || !isNaN(state.userName) || state.userName ===\"\"){\n//        dispatch({type:'validacion', payload:false})\n//        dispatch({type:'error', payload:true})\n//        setFail(\"Por favor verifique el nombre\")\n//     }\n//     else if( !expresionRegular.test(state.userEmail) ||  state.userEmail===\"\"){\n//       dispatch({type:'validacion', payload:false})\n//       dispatch({type:'error', payload:true})\n//       setFail(\"Por favor verifique la direccion de correo electronico\")\n//    }\n//     else{\n//       dispatch({type:'validacion', payload:true})\n//       dispatch({type:'error', payload:false})\n//     }\n//   }\n//   const handleOnchangeName=(e)=> dispatch({type:'change_inputName',payload:e.target.value.trimStart()})\n//   const handleOnchangeEmail=(e)=>  dispatch({type:'change_inputEmail',payload:e.target.value.trimStart()})\n//   console.log(state.userName)\n//   console.log(state.userEmail)\n//   console.log(state.validacion)\n//   console.log(state.error)\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <input placeholder=\"Nombre completo\" onChange={handleOnchangeName} value={state.userName} />\n//         <input placeholder=\"Email\" onChange={handleOnchangeEmail} value={state.userEmail} />\n//         <button>Send</button>\n//       </form>\n//       {state.validacion && <h2>Gracias {state.userName} te contactaremos cuanto antes via email a la direccion electronica {state.userEmail}</h2>}\n//       {state.error && <h3>{fail}</h3>}\n//     </div>\n//   );\n// };\n// export default Form;","map":{"version":3,"names":[],"sources":["C:/Users/EMMANUEL/Documents/React-Frontend3/Ejercicios/FinalProject/fe3-final/src/Components/Form.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { useContextGlobal } from \"./utils/global.context\";\r\n\r\n\r\n// const Form = () => {\r\n//   //Aqui deberan implementar el form completo con sus validaciones\r\n  \r\n//   const{state,dispatch}=useContextGlobal()\r\n//   const [fail, setFail]=useState(\"\")\r\n \r\n//   // const handleSubmit=(e)=>{\r\n//   //   e.preventDefault()\r\n//   //   const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n//   //   if(state.userName.length>5  && expresionRegular.test(state.userEmail) && isNaN(state.userName) && state.userName !==\"\" && state.userEmail!==\"\"){\r\n//   //      dispatch({type:'validacion', payload:true})\r\n//   //   }\r\n//   //   else{\r\n//   //     dispatch({type:'validacion', payload:false})\r\n//   //     dispatch({type:'error', payload:true})\r\n//   //   }\r\n//   // }\r\n\r\n//   const handleSubmit=(e)=>{\r\n//     e.preventDefault()\r\n//     const expresionRegular= /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n//     if( state.userName ===\"\" && state.userEmail===\"\"){\r\n//       dispatch({type:'validacion', payload:false})\r\n//       dispatch({type:'error', payload:true})\r\n//       setFail(\"Los campos no pueden estar vacios\")\r\n//    }\r\n//     else if(state.userName.length<=5  || !isNaN(state.userName) || state.userName ===\"\"){\r\n//        dispatch({type:'validacion', payload:false})\r\n//        dispatch({type:'error', payload:true})\r\n//        setFail(\"Por favor verifique el nombre\")\r\n//     }\r\n//     else if( !expresionRegular.test(state.userEmail) ||  state.userEmail===\"\"){\r\n//       dispatch({type:'validacion', payload:false})\r\n//       dispatch({type:'error', payload:true})\r\n//       setFail(\"Por favor verifique la direccion de correo electronico\")\r\n//    }\r\n\r\n//     else{\r\n//       dispatch({type:'validacion', payload:true})\r\n//       dispatch({type:'error', payload:false})\r\n//     }\r\n//   }\r\n  \r\n//   const handleOnchangeName=(e)=> dispatch({type:'change_inputName',payload:e.target.value.trimStart()})\r\n     \r\n     \r\n//   const handleOnchangeEmail=(e)=>  dispatch({type:'change_inputEmail',payload:e.target.value.trimStart()})\r\n\r\n//   console.log(state.userName)\r\n//   console.log(state.userEmail)\r\n//   console.log(state.validacion)\r\n//   console.log(state.error)\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input placeholder=\"Nombre completo\" onChange={handleOnchangeName} value={state.userName} />\r\n//         <input placeholder=\"Email\" onChange={handleOnchangeEmail} value={state.userEmail} />\r\n//         <button>Send</button>\r\n//       </form>\r\n\r\n//       {state.validacion && <h2>Gracias {state.userName} te contactaremos cuanto antes via email a la direccion electronica {state.userEmail}</h2>}\r\n      \r\n//       {state.error && <h3>{fail}</h3>}\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Form;\r\n"],"mappings":"AAAA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}